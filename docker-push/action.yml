name: docker-push
description: >-
  Push Docker images to Google Artifact Registry (GAR) and optionally GitHub Container Registry (GHCR).
inputs:
  project_id:
    description: "GCP `project_id` used to construct the service account."
    example: moz-fx-tenant-prod
    required: true
  image_tags:
    description: >-
      Newline-delimited list of images to be pushed. Typically generated by [mozilla-it/deploy-actions/docker-build](../docker-build/README.md), but may
      also be provided manually. See [GAR](https://cloud.google.com/artifact-registry/docs/docker/pushing-and-pulling)
      and [GHCR](https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry#pushing-container-images)
      for how to tag images.
    example: |
      us-docker.pkg.dev/moz-fx-tenant-prod/tenant-prod/my-service:v1.0.0
      ghcr.io/mozilla/my-repo/my-service:v1.0.0
    required: true
  workload_identity_pool_project_number:
    description: >-
      Project number of the workload identity pool used for OIDC authentication. Often available in
      the `vars` context as `${{ vars.GCPV2_WORKLOAD_IDENTITY_POOL_PROJECT_NUMBER }}`. See
      [these docs](https://mozilla-hub.atlassian.net/wiki/spaces/SRE/pages/997163545/How+to+Publish+Container+Images+to+GAR)
      for details.
    example: ${{ vars.GCPV2_WORKLOAD_IDENTITY_POOL_PROJECT_NUMBER }}
    required: true
  should_authenticate_to_ghcr:
    description: Whether or not to authenticate to GitHub Container Registry. Set this to `true` if one of the image tags includes `ghcr.io`.
    required: false
    default: "false"
  service_account_name:
    description: Service account used to authenticate to GAR.
    required: false
    default: artifact-writer
  gar_location:
    description: GCP region where the target GAR is located.
    required: false
    default: us
runs:
  using: composite
  steps:
    - name: Authenticate to GCP
      id: gcp_auth
      uses: google-github-actions/auth@3a3c4c57d294ef65efaaee4ff17b22fa88dd3c69 #v1
      with:
        workload_identity_provider: "projects/${{ inputs.workload_identity_pool_project_number }}/locations/global/workloadIdentityPools/github-actions/providers/github-actions"
        service_account: "${{ inputs.service_account_name }}@${{ inputs.project_id }}.iam.gserviceaccount.com"
        token_format: access_token
        create_credentials_file: false
    - name: Log in to GAR
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 #v3
      with:
        registry: ${{ inputs.gar_location }}-docker.pkg.dev
        username: oauth2accesstoken
        password: "${{ steps.gcp_auth.outputs.access_token }}"
    - name: Log in to GitHub Container Registry
      if: inputs.should_authenticate_to_ghcr == 'true'
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}
    - name: Push Docker image(s)
      shell: bash
      env:
        IMAGE_TAGS: ${{ inputs.image_tags }}
      run: |
        while IFS= read -r image_tag; do
            docker push $image_tag 
        done <<< "${IMAGE_TAGS}"
